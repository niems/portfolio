

//media queries for the homepage
@mixin homepageMediaQuery($minWidth, $containerSize, $font-scale) {
    @media only screen and (min-width: $minWidth) {
        #home-container {
            max-width: $containerSize;
            min-height: $containerSize;
    
            #home-background-img {
                svg {
                    width: $containerSize;
                }
            }
        }
    
        span[id='name'] {
            font-size: $name-font-size * $font-scale;

            @if($minWidth >= 1000px) {
                margin-left: 2.5rem;
                margin-bottom: 1rem;
            }
        }
        
        #homepage-effect {
            font-size: $effect-font-size * $font-scale;
        }
    }
}

@mixin aboutMeMediaQuery($minWidth, $header-size, $desc-size, $btn-font-size) {
    @media only screen and (min-width: $minWidth) {
        #about-me-section {
            #about-me-header {
                font-size: $header-size;
            }
            .section-description {
                font-size: $desc-size;
            }

            #resume-link {
                button {
                    font-size: $btn-font-size;
                }
            }
        }
    }
}

@mixin contactMediaQuery($minWidth, $desc-size, $icon-size) {
    @media only screen and (min-width: $minWidth) {
        #contact-social-links {
            .contact-link {
                img {
                    width: $icon-size;
                }
            }
        }

        #contact-description {
            span {
                font-size: $desc-size;
            }
        }
    }
}

@mixin progressbarMediaQuery($minWidth, $desc-size, $wrapper-size, $skill-size, $img-container-size, $icon-width) {

    @media only screen and (min-width: $minWidth) {
        .all-progress-bars-container {
            .progressbar-section-description {
                font-size: $desc-size;
            }
        }
    
        .progress-bar-wrapper {
            width: $wrapper-size;
            height: $wrapper-size;
        }
    
        .progress-bar-text {
            font-size: $skill-size;
        }
            
        
        .progress-bar-img-container {
            width: $img-container-size;
        
            .progress-bar-img {
                display: inline-block;
                
                max-height: $icon-width;
                height: auto;
            }
        }
    }
}

@mixin navbarMediaQuery($minWidth, $menu-btn-size, $menu-item-size, $item-description-font-size,
                        $total-menu-items, $menu-items, $menu-item-transform-offset,
                        $menu-icon-height, $menu-icon-spacing) {

    @media only screen and (min-width: $minWidth) {
        #gooey-menu-container {
            width: $menu-btn-size;
            height: $menu-btn-size;
            bottom: -$menu-btn-size - 10px;
        }

        .menu-open {
            &:checked {
                @for $i from 1 through $total-menu-items {
                    ~ ##{ map-get( nth($menu-items, $i), id)} {
                        @include itemTransform(0, ($menu-item-transform-offset * $i), 0, 0deg);
                    }
                }
            }

            &:not(:checked):hover {
                ~.menu-open-button {
                    #hamburger1 {
                        transform: translate3d(0, -$menu-icon-spacing * 1.5, 0);
                    }
        
                    #hamburger3 {
                        transform: translate3d(0, $menu-icon-spacing * 1.5, 0);
                    }
                }
            }
        }

        .menu-open-button {
            width: $menu-btn-size;
            height: $menu-btn-size;

            .hamburger {
                width: $menu-btn-size * 0.5; //$menu-icon-width;
                height: $menu-icon-height;
            }

            #hamburger1 {
                transform: translate3d(0, -$menu-icon-spacing, 0);
            }

            #hamburger3 {
                transform: translate3d(0, $menu-icon-spacing, 0);
            }
        }

        .menu-item {
            width: $menu-item-size;
            height: $menu-item-size;

            .menu-item-description {
                font-size: $item-description-font-size;
            }
        }
        
    }
}

@mixin pageDescriptionMediaQuery($minWidth, $font-size, $line-height) {
    @media only screen and (min-width: $minWidth) {
        .section-description {
            font-size: $font-size;
            line-height: $line-height;
        }
    }
}
